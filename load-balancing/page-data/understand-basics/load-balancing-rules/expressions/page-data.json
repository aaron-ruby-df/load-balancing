{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/understand-basics/load-balancing-rules/expressions","result":{"data":{"mdx":{"id":"0605e4d6-4c46-5618-bb1e-e35814634410","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Expressions\",\n  \"order\": 20\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"load-balancing-expressions\"\n  }, \"Load Balancing expressions\"), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"When working with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/load-balancing/understand-basics/load-balancing-rules\"\n  }, \"Load Balancing rules\"), \", you will encounter two kinds of expression:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#simple-expressions\"\n  }, \"Simple expressions\"), \" compare a value from an HTTP request to a value defined in the expression. You can identify a simple expression by the presence of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"comparison operator\"), \" (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"equals\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"less than\"), \", for example).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#compound-expressions\"\n  }, \"Compound expressions\"), \" combine two or more simple expressions into a single expression. You can identify a compound expression by the presence of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"logical operator\"), \" (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"or\"), \", for example). With compound expressions you can tailor rules to specific use cases with a high degree of accuracy and precision.\"))), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Create Custom Rule\"), \" dialog in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Traffic\"), \" app provides two interfaces for creating expressions: the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#expression-builder\"\n  }, \"Expression Builder\"), \" and the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#expression-editor\"\n  }, \"Expression Editor\"), \".\"), mdx(\"p\", null, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"1021px\"\n    }\n  }, \"\\n      \", mdx(\"a\", {\n    parentName: \"span\",\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/load-balancing/static/159ee2f8d164f1aa91fa74a0ccabaf09/51ed8/traffic-app-create-custom-rule-dialog.png\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": \"noopener\"\n  }, \"\\n    \", mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"93.9306358381503%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"display\": \"block\"\n    }\n  }), \"\\n  \", mdx(\"img\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Create Custom Rule dialog\",\n    \"title\": \"Create Custom Rule dialog\",\n    \"src\": \"/load-balancing/static/159ee2f8d164f1aa91fa74a0ccabaf09/51ed8/traffic-app-create-custom-rule-dialog.png\",\n    \"srcSet\": [\"/load-balancing/static/159ee2f8d164f1aa91fa74a0ccabaf09/8f77f/traffic-app-create-custom-rule-dialog.png 346w\", \"/load-balancing/static/159ee2f8d164f1aa91fa74a0ccabaf09/e185b/traffic-app-create-custom-rule-dialog.png 691w\", \"/load-balancing/static/159ee2f8d164f1aa91fa74a0ccabaf09/51ed8/traffic-app-create-custom-rule-dialog.png 1021w\"],\n    \"sizes\": \"(max-width: 1021px) 100vw, 1021px\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    },\n    \"loading\": \"lazy\"\n  }), \"\\n  \"), \"\\n    \")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"simple-expressions\"\n  }, \"Simple expressions\"), mdx(\"p\", null, \"Simple expressions are composed of three elements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"field\"), \" that represents a property of an HTTP request.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A representative \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"value\"), \" for that field, which Cloudflare compares with the actual value from the request.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"comparison operator\"), \", which specifies how the value defined in the expression must relate to the actual value from the request for the operator to return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\")), mdx(\"p\", null, \"When the comparison operator returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", the request matches the expression.\"), mdx(\"p\", null, \"This example expression returns true when a request URI path contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"(http.request.uri.path contains \\\"/content\\\")\\n\")), mdx(\"p\", null, \"In general, simple expressions use this pattern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"<field> <operator> <value>\\n\")), mdx(\"p\", null, \"For more, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/load-balancing/understand-basics/load-balancing-rules/supported-fields-and-operators\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Supported fields and operators\")), \".\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"compound-expressions\"\n  }, \"Compound expressions\"), mdx(\"p\", null, \"A compound expression uses a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"logical operator\"), \" (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"or\"), \", for example) to combine two or more expressions. Compound expressions are powerful because they allow you to build complex statements within a single expression.\"), mdx(\"p\", null, \"This example expression returns true when both the HTTP request URI path contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content\"), \" and the query string contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stream1\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"(http.request.uri.path contains \\\"/content\\\") \\nand (http.request.uri.query contains \\\"webserver\\\")\\n\")), mdx(\"p\", null, \"In general, compound expressions use this pattern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"<expression> <logical operator> <expression>\\n\")), mdx(\"p\", null, \"Note that a compound expression can itself be one of the operands of a logical operator. In this way, you can use multiple operators to construct a compound expression from many individual expressions.\"), mdx(\"p\", null, \"For more, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/load-balancing/understand-basics/load-balancing-rules/supported-fields-and-operators\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Supported fields and operators\")), \".\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"working-with-expressions\"\n  }, \"Working with expressions\"), mdx(\"p\", null, \"The Expression Builder\\u2019s visual interface allows you to build expressions without worrying about field names and syntax.\"), mdx(\"p\", null, \"By comparison, the Expression Editor is text only, but it supports advanced features not available in the builder.\"), mdx(\"h3\", {\n    \"id\": \"expression-builder\"\n  }, \"Expression Builder\"), mdx(\"p\", null, \"Complex expressions are easier to scan when displayed in the Expression Builder\\u2019s visual interface:\"), mdx(\"p\", null, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"820px\"\n    }\n  }, \"\\n      \", mdx(\"a\", {\n    parentName: \"span\",\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/load-balancing/static/a0a73c43423cb06e36dc28724519ac2d/9f82e/rules-builder-1.png\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": \"noopener\"\n  }, \"\\n    \", mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"58.09248554913295%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"display\": \"block\"\n    }\n  }), \"\\n  \", mdx(\"img\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Expression Builder in Load Balancing tab of Traffic app\",\n    \"title\": \"Expression Builder in Load Balancing tab of Traffic app\",\n    \"src\": \"/load-balancing/static/a0a73c43423cb06e36dc28724519ac2d/9f82e/rules-builder-1.png\",\n    \"srcSet\": [\"/load-balancing/static/a0a73c43423cb06e36dc28724519ac2d/8f77f/rules-builder-1.png 346w\", \"/load-balancing/static/a0a73c43423cb06e36dc28724519ac2d/e185b/rules-builder-1.png 691w\", \"/load-balancing/static/a0a73c43423cb06e36dc28724519ac2d/9f82e/rules-builder-1.png 820w\"],\n    \"sizes\": \"(max-width: 820px) 100vw, 820px\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    },\n    \"loading\": \"lazy\"\n  }), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"Notice how the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expression Preview\"), \" displays the expression in text:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"(http.request.uri.path contains \\\"/content\\\") \\nand (http.request.uri.query contains \\\"webserver\\\")\\n\")), mdx(\"p\", null, \"The Expression Preview is a great reference for learning to write more advanced expressions.\"), mdx(\"p\", null, \"For a walkthrough, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/load-balancing/understand-basics/load-balancing-rules/create-rules\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Creating Load Balancing rules\")), \".\"), mdx(\"h3\", {\n    \"id\": \"expression-editor\"\n  }, \"Expression Editor\"), mdx(\"p\", null, \"The Expression Editor is a text-only interface for creating Load Balancing expressions. Although it lacks the visual simplicity of the Expression Builder, the Expression Editor editor supports advanced features, such as support for grouping symbols (parentheses).\"), mdx(\"p\", null, \"To access the Expression Editor in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Traffic\"), \" app, click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Edit expression\"), \" in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Create Custom Rule\"), \" dialog:\"), mdx(\"p\", null, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"822px\"\n    }\n  }, \"\\n      \", mdx(\"a\", {\n    parentName: \"span\",\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/load-balancing/static/354d807383289c1ae3dd7f3841565e7a/f73a1/rules-builder-edit-expression-link.png\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": \"noopener\"\n  }, \"\\n    \", mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"16.473988439306357%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"display\": \"block\"\n    }\n  }), \"\\n  \", mdx(\"img\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Edit expression link in Create Custom Rule dialog\",\n    \"title\": \"Edit expression link in Create Custom Rule dialog\",\n    \"src\": \"/load-balancing/static/354d807383289c1ae3dd7f3841565e7a/f73a1/rules-builder-edit-expression-link.png\",\n    \"srcSet\": [\"/load-balancing/static/354d807383289c1ae3dd7f3841565e7a/8f77f/rules-builder-edit-expression-link.png 346w\", \"/load-balancing/static/354d807383289c1ae3dd7f3841565e7a/e185b/rules-builder-edit-expression-link.png 691w\", \"/load-balancing/static/354d807383289c1ae3dd7f3841565e7a/f73a1/rules-builder-edit-expression-link.png 822w\"],\n    \"sizes\": \"(max-width: 822px) 100vw, 822px\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    },\n    \"loading\": \"lazy\"\n  }), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"The Expression Editor displays:\"), mdx(\"p\", null, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"971px\"\n    }\n  }, \"\\n      \", mdx(\"a\", {\n    parentName: \"span\",\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/load-balancing/static/812791327dd7ee71744eae859bd51a1b/bf433/rules-editor-1.png\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": \"noopener\"\n  }, \"\\n    \", mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"35.83815028901734%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0\",\n      \"left\": \"0\",\n      \"display\": \"block\"\n    }\n  }), \"\\n  \", mdx(\"img\", {\n    parentName: \"a\",\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Expression Editor in Load Balancing tab of Traffic app\",\n    \"title\": \"Expression Editor in Load Balancing tab of Traffic app\",\n    \"src\": \"/load-balancing/static/812791327dd7ee71744eae859bd51a1b/bf433/rules-editor-1.png\",\n    \"srcSet\": [\"/load-balancing/static/812791327dd7ee71744eae859bd51a1b/8f77f/rules-editor-1.png 346w\", \"/load-balancing/static/812791327dd7ee71744eae859bd51a1b/e185b/rules-editor-1.png 691w\", \"/load-balancing/static/812791327dd7ee71744eae859bd51a1b/bf433/rules-editor-1.png 971w\"],\n    \"sizes\": \"(max-width: 971px) 100vw, 971px\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    },\n    \"loading\": \"lazy\"\n  }), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"To return to the builder, click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Use expression builder\"), \".\"), mdx(\"h3\", {\n    \"id\": \"rules-lists\"\n  }, \"Rules lists\"), mdx(\"p\", null, \"Rules lists allow you to create a group of IP addresses and refer to them collectively, by name, in your Load Balancing expressions.\"), mdx(\"p\", null, \"For example, you might create a list of known office IP addresses and use it in a Load Balancing rule that directs requests from that office to a specific origin pool.\"), mdx(\"p\", null, \"Cloudflare stores your lists at the account level, so you can view, manage, and incorporate them into Load Balancing rules for any of your zones.\"), mdx(\"p\", null, \"For more, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-rules/rules-lists\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Rules lists\")), \" in the Firewall Rules documentation.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"Expressions","type":null,"updated":null}}},"pageContext":{"id":"0605e4d6-4c46-5618-bb1e-e35814634410","fields":{"slug":"/understand-basics/load-balancing-rules/expressions"},"frontmatter":{"title":"Expressions","type":null,"order":20,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Load Balancing expressions","depth":1}],"tableOfContents":{"items":[{"url":"#load-balancing-expressions","title":"Load Balancing expressions","items":[{"url":"#overview","title":"Overview"},{"url":"#simple-expressions","title":"Simple expressions"},{"url":"#compound-expressions","title":"Compound expressions"},{"url":"#working-with-expressions","title":"Working with expressions","items":[{"url":"#expression-builder","title":"Expression Builder"},{"url":"#expression-editor","title":"Expression Editor"},{"url":"#rules-lists","title":"Rules lists"}]}]}]},"parent":{"modifiedTime":"2021-02-18","relativePath":"understand-basics/load-balancing-rules/expressions.md"}}},"staticQueryHashes":["1302537747","2814688963","32046230","338033027","811020565"]}